services:
  postgres:
    image: postgres:15
    container_name: ory_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: kratos
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: kratos
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ory
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kratos -d kratos"]
      interval: 10s
      timeout: 5s
      retries: 5

  kratos-migrate:
    image: oryd/kratos:v1.0.0
    container_name: kratos_migrate
    environment:
      - DSN=postgres://kratos:secret@postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - ./kratos:/etc/config/kratos:ro
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: "no"
    networks:
      - ory
    depends_on:
      postgres:
        condition: service_healthy

  kratos:
    depends_on:
      kratos-migrate:
        condition: service_completed_successfully
    image: oryd/kratos:v1.0.0
    container_name: kratos_server
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://kratos:secret@postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - ./kratos:/etc/config/kratos:ro
    networks:
      - ory

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    container_name: mail_server
    ports:
      - '4436:4436'
      - '4437:4437'
    networks:
      - ory

volumes:
  postgres_data:

networks:
  ory:
    driver: bridge
